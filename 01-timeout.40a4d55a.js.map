{"version":3,"sources":["js/01-timeout.js"],"names":["logger","time","console","log","timerID","setTimeout","shouldClearTimeout","Math","random","clearTimeout"],"mappings":";;;AAoCC,aApCD,QAAA,qBAwBA,IAAMA,EAAS,SAAAC,GACXC,QAAQC,IAAiBF,aAAAA,OAAAA,EAAzB,uCAGEG,EAAUC,WAAWL,EAAQ,IAAM,KACzCE,QAAQC,IAAIC,GAEZ,IAAME,EAAqBC,KAAKC,SAAW,GAC3CN,QAAQC,IAAIG,GAERA,GACAG,aAAaL","file":"01-timeout.40a4d55a.js","sourceRoot":"..\\src","sourcesContent":["import '../css/styles.css';\r\n/*\r\n * Метод window.setTimeout(callback, delay, args)\r\n */\r\n// console.log('До запуска setTimeout');\r\n\r\n// setTimeout(() => {\r\n//     console.log('2-callback внутри setTimeout');\r\n// }, 2000);\r\n\r\n// setTimeout(() => {\r\n//     console.log('1-callback внутри setTimeout');\r\n// }, 1000);\r\n\r\n// for (let i = 0; i < 1000; i+=1) {\r\n//     console.log(i);\r\n// }\r\n\r\n// console.log('После запуска setTimeout');\r\n\r\n/*\r\n * Очистка таймаута с clearTimeout(timeoutId)\r\n */\r\n\r\nconst logger = time => {\r\n    console.log(`Лог через ${time}ms потому что не отменили таймаут`);\r\n}\r\n\r\nconst timerID = setTimeout(logger, 2000, 2000);\r\nconsole.log(timerID);\r\n\r\nconst shouldClearTimeout = Math.random() > 0.3;\r\nconsole.log(shouldClearTimeout);\r\n\r\nif (shouldClearTimeout) {\r\n    clearTimeout(timerID);\r\n}"]}